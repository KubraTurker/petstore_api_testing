{"uid":"d04d5378e29a3327","name":"Update an existing user's information","fullName":"tests.test_petstore.test_user.TestUser#test_update_user","historyId":"2658914d029d1676efa181e88fa347f7","time":{"start":1744126812804,"stop":1744126827977,"duration":15173},"status":"failed","statusMessage":"AssertionError: assert 'Jacqueline' == 'UpdatedFirstName'\n  \n  - UpdatedFirstName\n  + Jacqueline","statusTrace":"self = <test_user.TestUser object at 0x7fc637c374c0>\napp = <fixtures.app.Application object at 0x7fc637c38eb0>\n\n    @pytest.mark.positive\n    @allure.story(\"Update User\")\n    @allure.title(\"Update an existing user's information\")\n    def test_update_user(self, app):\n        with allure.step(\"Create and add a user\"):\n            data = User.random()\n            created_user = app.user_api.add_user(data)\n            assert created_user.status_code == 200\n    \n        with allure.step(\"Update user's first and last name\"):\n            updated_user = created_user.data.to_dict()\n            updated_user[\"firstName\"] = \"UpdatedFirstName\"\n            updated_user[\"lastName\"] = \"UpdatedLastName\"\n    \n        with allure.step(\"Submit update request\"):\n            response = app.user_api.update_user(User(**updated_user))\n            assert response.status_code == 200\n            time.sleep(5)\n    \n        with allure.step(\"Get updated user and verify changes\"):\n            res_get = app.user_api.get_user_by_username(\n                username=updated_user[\"username\"]\n            )\n            time.sleep(10)\n            assert res_get.status_code == 200\n            get_user_data = res_get.data.to_dict()\n>           assert get_user_data[\"firstName\"] == \"UpdatedFirstName\"\nE           AssertionError: assert 'Jacqueline' == 'UpdatedFirstName'\nE             \nE             - UpdatedFirstName\nE             + Jacqueline\n\ntests/test_petstore/test_user.py:101: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744126731758,"stop":1744126731759,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app","time":{"start":1744126731759,"stop":1744126731759,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Jacqueline' == 'UpdatedFirstName'\n  \n  - UpdatedFirstName\n  + Jacqueline","statusTrace":"self = <test_user.TestUser object at 0x7fc637c374c0>\napp = <fixtures.app.Application object at 0x7fc637c38eb0>\n\n    @pytest.mark.positive\n    @allure.story(\"Update User\")\n    @allure.title(\"Update an existing user's information\")\n    def test_update_user(self, app):\n        with allure.step(\"Create and add a user\"):\n            data = User.random()\n            created_user = app.user_api.add_user(data)\n            assert created_user.status_code == 200\n    \n        with allure.step(\"Update user's first and last name\"):\n            updated_user = created_user.data.to_dict()\n            updated_user[\"firstName\"] = \"UpdatedFirstName\"\n            updated_user[\"lastName\"] = \"UpdatedLastName\"\n    \n        with allure.step(\"Submit update request\"):\n            response = app.user_api.update_user(User(**updated_user))\n            assert response.status_code == 200\n            time.sleep(5)\n    \n        with allure.step(\"Get updated user and verify changes\"):\n            res_get = app.user_api.get_user_by_username(\n                username=updated_user[\"username\"]\n            )\n            time.sleep(10)\n            assert res_get.status_code == 200\n            get_user_data = res_get.data.to_dict()\n>           assert get_user_data[\"firstName\"] == \"UpdatedFirstName\"\nE           AssertionError: assert 'Jacqueline' == 'UpdatedFirstName'\nE             \nE             - UpdatedFirstName\nE             + Jacqueline\n\ntests/test_petstore/test_user.py:101: AssertionError","steps":[{"name":"Create and add a user","time":{"start":1744126812804,"stop":1744126812834,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Update user's first and last name","time":{"start":1744126812834,"stop":1744126812834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Submit update request","time":{"start":1744126812834,"stop":1744126817870,"duration":5036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Get updated user and verify changes","time":{"start":1744126817870,"stop":1744126827977,"duration":10107},"status":"failed","statusMessage":"AssertionError: assert 'Jacqueline' == 'UpdatedFirstName'\n  \n  - UpdatedFirstName\n  + Jacqueline\n","statusTrace":"  File \"/home/runner/work/petstore_api_testing/petstore_api_testing/tests/test_petstore/test_user.py\", line 101, in test_update_user\n    assert get_user_data[\"firstName\"] == \"UpdatedFirstName\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"93f4a97a6b8aaf3","name":"log","source":"93f4a97a6b8aaf3.txt","type":"text/plain","size":1605}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"User Endpoint Tests"},{"name":"story","value":"Update User"},{"name":"tag","value":"positive"},{"name":"parentSuite","value":"tests.test_petstore"},{"name":"suite","value":"test_user"},{"name":"subSuite","value":"TestUser"},{"name":"host","value":"fv-az1393-131"},{"name":"thread","value":"2253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_petstore.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c27193c9efc59e7a","reportUrl":"https://KubraTurker.github.io/petstore_api_testing/16//#testresult/c27193c9efc59e7a","status":"failed","statusDetails":"AssertionError: assert 'Kari' == 'UpdatedFirstName'\n  \n  - UpdatedFirstName\n  + Kari","time":{"start":1744126506222,"stop":1744126521420,"duration":15198}}]},"tags":["positive"]},"source":"d04d5378e29a3327.json","parameterValues":[]}