{"uid":"bfb691fc951b171a","name":"Retrieve a user by username","fullName":"tests.test_petstore.test_user.TestUser#test_get_user_by_username","historyId":"dbe0db3e00a7cde8f7366af4891988d1","time":{"start":1744126490940,"stop":1744126506119,"duration":15179},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_user.TestUser object at 0x7f354f03e6d0>\napp = <fixtures.app.Application object at 0x7f354f03e550>\n\n    @pytest.mark.positive\n    @allure.story(\"Get User\")\n    @allure.title(\"Retrieve a user by username\")\n    def test_get_user_by_username(self, app):\n        with allure.step(\"Create and add a new user\"):\n            data = User.random()\n            res_add = app.user_api.add_user(data=data)\n            assert res_add.status_code == 200\n    \n        time.sleep(10)\n    \n        with allure.step(\"Get user by username\"):\n            res_get = app.user_api.get_user_by_username(username=data.username)\n            allure.attach(\n                str(res_get.status_code),\n                \"Response Status Code\",\n                allure.attachment_type.TEXT,\n            )\n    \n            time.sleep(5)\n    \n>           assert res_get.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/test_petstore/test_user.py:63: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744126436038,"stop":1744126436039,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app","time":{"start":1744126436039,"stop":1744126436039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_user.TestUser object at 0x7f354f03e6d0>\napp = <fixtures.app.Application object at 0x7f354f03e550>\n\n    @pytest.mark.positive\n    @allure.story(\"Get User\")\n    @allure.title(\"Retrieve a user by username\")\n    def test_get_user_by_username(self, app):\n        with allure.step(\"Create and add a new user\"):\n            data = User.random()\n            res_add = app.user_api.add_user(data=data)\n            assert res_add.status_code == 200\n    \n        time.sleep(10)\n    \n        with allure.step(\"Get user by username\"):\n            res_get = app.user_api.get_user_by_username(username=data.username)\n            allure.attach(\n                str(res_get.status_code),\n                \"Response Status Code\",\n                allure.attachment_type.TEXT,\n            )\n    \n            time.sleep(5)\n    \n>           assert res_get.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests/test_petstore/test_user.py:63: AssertionError","steps":[{"name":"Create and add a new user","time":{"start":1744126490940,"stop":1744126491053,"duration":113},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Get user by username","time":{"start":1744126501063,"stop":1744126506118,"duration":5055},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"/home/runner/work/petstore_api_testing/petstore_api_testing/tests/test_petstore/test_user.py\", line 63, in test_get_user_by_username\n    assert res_get.status_code == 200\n","steps":[],"attachments":[{"uid":"27b03ce856ddd5ef","name":"Response Status Code","source":"27b03ce856ddd5ef.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"eeb341d7fefd15ba","name":"log","source":"eeb341d7fefd15ba.txt","type":"text/plain","size":886}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Get User"},{"name":"epic","value":"User Endpoint Tests"},{"name":"tag","value":"positive"},{"name":"parentSuite","value":"tests.test_petstore"},{"name":"suite","value":"test_user"},{"name":"subSuite","value":"TestUser"},{"name":"host","value":"fv-az1970-26"},{"name":"thread","value":"2286-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_petstore.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["positive"]},"source":"bfb691fc951b171a.json","parameterValues":[]}